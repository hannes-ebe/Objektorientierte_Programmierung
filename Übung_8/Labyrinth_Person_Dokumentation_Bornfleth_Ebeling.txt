Labyrinth-Person Dokumentation - Pierre Bornfleth und Hannes Ebeling - Übung 8

1. Generieren Sie ein Spielfeld sowie Start und Ziel:

Es wird stets das gleiche vordefinierte Spielfeld genutzt.

Start und Ziel:
Start: oben links; Index (0,0)
Ziel: unten rechts; Index (width,height)
In der Klasse World werden die Koordinaten von Start und Ziel als private final Attribute gespeichert und über den
Konstruktor gesetzt. ConsoleView holt sich die Positionen von Start und Ziel über getter-Methoden und stellt Start
und Ziel als S (start) und D (destination) dar. Der Spieler, der als Raute dargestellt wird, überlagert stets die
anderen Symbole in der Konsole. In der GUI ist der Spieler als blauer Kreis mit einem weißen P (player) gekennzeichnet.
Start und Ziel sind in der paint-Methode von GraphicView gecodet.

Neustart des Spiels:
Zunächst kann das Spiel jederzeit über einen Button in der Menüleiste der GUI neu gestartet werden. (Im Rahmen der Implementierung wurde die
Methode updateViews dafür public gemacht.)

Ende des Spiels:
Wird das Ziel erreicht, wird ein neues Fenster in der GUI erstellt und der Spieler kann aussuchen, ob er
das Spiel neu starten oder die Anwendung als Ganzes beenden möchte. Zeitgleich kann das Spiel stets über die Menüleiste beendet werden.
Falls der Spieler gefangen wird, wird über die GUI ebenfalls gefragt, ob die Anwendung geschlossen werden oder das Spiel neu gestartet
werden soll.

Aktualisierung des Modells:
Die Funktion updateViews wird nicht mehr in den Settern der Spieler-Koordinaten aufgerufen, sondern in der keyPressed-Methode des KeyListeners,
da immer, wenn der Spieler sich bewegt anschließend auch die Verfolger geupdated werden und ein Update der Views nötig ist.

Schwierigkeit des Spiels:
Es werden Verfolger erzeugt. Befinden sich Spieler und Verfolger auf einem Feld, ist das Spiel verloren. Sowohl in der Klasse GraphicView als auch in der
Klasse World werden die Verfolger in einer ArrayList gespeichert. In der GUI sind sie als schwarze Kreise mit einem X zu erkennen, in der Konsolendarstellung
als X.
Die Verfolger können sich wie der Spieler nach oben, unten, links oder rechts bewegen. Eine erste Zufallszahl (-1 oder 1) bestimmt, ob die Bewegung in x- oder
y-Richtung erfolgt. Eine zweite Zufallszahl (-1 oder 1) sagt dann, ob es in positiver oder negativer Richtung ist. Die Implemmentierung erfolgt in der Subklasse Pursuer
der Klasse World.

Labyrinth:
Die Positionen der Wandelemente sind als boolsche Werte in einem zweidimensionalen Array gespeichert. Die erste Dimension entspricht der x-Achse, die zweite
der y-Achse. Wird ein Zug getätigt und der Spieler würde das Spielfeld verlassen oder eine Wand treffen, wird seine Position nicht aktualisiert. Jedoch führen
die Verfolger trotzdem einen Zug durch. Die Verfolger sind so implementiert, dass sie nur gültige Züge machen, also nicht gegen Wände laufen.


Weitere Anmerkungen:
Die Implementierungen der Abfragen zum Beenden oder Neustarten des Spiels finden in der Klasse World statt. GraphicView und ConsoleView beschränken
sich lediglich auf die Darstellung der Spielwelt. Die Implementierung der Menüs befindet sich entsprechend in der Klasse Labyrinth.